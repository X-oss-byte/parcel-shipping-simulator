CREATE TABLE users (
  id INTEGER UNIQUE NOT NULL AUTO_INCREMENT,
  name VARCHAR(30) NOT NULL,
  surname VARCHAR(30) NOT NULL, 
  email VARCHAR(100) PRIMARY KEY,
  password VARCHAR(50) NOT NULL,
  phone INTEGER NOT NULL,
  type VARCHAR(25) NOT NULL,
  CHECK (tip = "user" OR tip = "driver" OR tip = "admin" OR tip = "employee")
);

CREATE TABLE orders(
  awb INTEGER AUTO_INCREMENT PRIMARY KEY,
  fullName_sender VARCHAR(25) NOT NULL,
  contactPerson_sender VARCHAR(25) NOT NULL,
  phone_sender VARCHAR(25) NOT NULL,
  email_sender VARCHAR(25) NOT NULL,
  county_sender VARCHAR(25) NOT NULL,
  city_sender VARCHAR(25) NOT NULL,
  address_sender VARCHAR(25) NOT NULL,
  fullName_receiver VARCHAR(25) NOT NULL,
  contactPerson_receiver VARCHAR(25) NOT NULL,
  phone_receiver VARCHAR(25) NOT NULL,
  county_receiver VARCHAR(25) NOT NULL,
  city_receiver VARCHAR(25) NOT NULL,
  address_receiver VARCHAR(25) NOT NULL,
  nrEnvelope VARCHAR(25),
  nrParcel VARCHAR(25),
  weight VARCHAR(25),
  length VARCHAR(25),
  width VARCHAR(25),
  height VARCHAR(25),
  date DATE NOT NULL,
  hour TIME NOT NULL,
  preference1 VARCHAR(10) DEFAULT "OFF" CHECK(preference1="OFF" OR preference1="ON"),
  preference2 VARCHAR(10) DEFAULT "OFF" CHECK(preference2="OFF" OR preference2="ON"),
  preference3 VARCHAR(10) DEFAULT "OFF" CHECK(preference3="OFF" OR preference3="ON"),
  payment VARCHAR(10) CHECK(payment="card" OR payment="cash"),
  mentions VARCHAR(100),
  status VARCHAR(25) DEFAULT "În curs de livrare" CHECK (status = "Livrat" OR status = "În curs de livrare")
);

CREATE TABLE driver_order_details(
  awb INTEGER NOT NULL references orders(awb),
  id_sofer INTEGER NOT NULL references users(id)
);

CREATE TABLE awb_events(
  awb INTEGER NOT NULL references orders(awb),
  event_type VARCHAR(25) DEFAULT "Comandă primită",
  about VARCHAR(25),
  date_time DATETIME,
  CHECK( 
    event_type="Comandă primită" 
    OR event_type="Ridicat de la expeditor" 
    OR event_type="A ajuns la hob local" 
    OR event_type="În tranzit" 
    OR event_type="În curs de livrare" 
    OR event_type="Destinatar"
  )
);

CREATE TABLE cars (
  registration_number VARCHAR(25) PRIMARY KEY,
  id_driver INTEGER references users(id),
  status VARCHAR(25),
  CHECK (status = "Bună" OR stare = "Stricată")
);

CREATE TABLE tokens (
  id INTEGER NOT NULL references user(id),
  token VARCHAR(100) NOT NULL
);

CREATE TABLE driver_events (
  id INTEGER NOT NULL references users(id),
  accident BOOLEAN,
  meteo BOOLEAN,
  failure BOOLEAN, 
  client BOOLEAN,
  content BOOLEAN, 
  livrare BOOLEAN
);

CREATE TABLE notifications (
  id INTEGER PRIMARY KEY AUTO_INCREMENT,
  expirey_date DATE,
  text VARCHAR(100) NOT NULL
);

CREATE TABLE codes (
  id INTEGER NOT NULL references users(id),
  code INTEGER AUTO_INCREMENT PRIMARY KEY,
  expiry_date DATETIME NOT NULL,
  type VARCHAR(25) NOT NULL,
  CHECK (type="password" or type="email" or type="address")
);

CREATE TABLE price (
  price INTEGER NOT NULL
);
